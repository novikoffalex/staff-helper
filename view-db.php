<?php
// –ü—Ä–æ—Å—Ç–æ–π endpoint –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –±–∞–∑—ã
echo "<h1>üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö PostgreSQL</h1>";

$databaseUrl = getenv('DATABASE_URL');
if (!$databaseUrl) {
    echo "<p>‚ùå DATABASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞</p>";
    exit;
}

try {
    $db = new PDO($databaseUrl);
    $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
    
    echo "<p>‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ</p>";
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
    $tables = $db->query("SELECT table_name FROM information_schema.tables WHERE table_schema = 'public'")->fetchAll(PDO::FETCH_COLUMN);
    
    echo "<h2>üìã –¢–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ:</h2><ul>";
    foreach ($tables as $table) {
        echo "<li>$table</li>";
    }
    echo "</ul>";
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º telegram_users
    if (in_array('telegram_users', $tables)) {
        $userCount = $db->query("SELECT COUNT(*) FROM telegram_users")->fetchColumn();
        echo "<h2>üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ($userCount):</h2>";
        
        if ($userCount > 0) {
            $users = $db->query("SELECT telegram_id, first_name, last_seen_at FROM telegram_users ORDER BY last_seen_at DESC")->fetchAll(PDO::FETCH_ASSOC);
            echo "<table border='1'><tr><th>ID</th><th>–ò–º—è</th><th>–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–∏–∑–∏—Ç</th></tr>";
            foreach ($users as $user) {
                echo "<tr><td>{$user['telegram_id']}</td><td>{$user['first_name']}</td><td>{$user['last_seen_at']}</td></tr>";
            }
            echo "</table>";
        }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º conversation_messages
    if (in_array('conversation_messages', $tables)) {
        $messageCount = $db->query("SELECT COUNT(*) FROM conversation_messages")->fetchColumn();
        echo "<h2>üí¨ –°–æ–æ–±—â–µ–Ω–∏—è ($messageCount):</h2>";
        
        if ($messageCount > 0) {
            $messages = $db->query("SELECT message_type, COUNT(*) as count FROM conversation_messages GROUP BY message_type")->fetchAll(PDO::FETCH_ASSOC);
            echo "<h3>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</h3><ul>";
            foreach ($messages as $msg) {
                echo "<li>{$msg['message_type']}: {$msg['count']}</li>";
            }
            echo "</ul>";
            
            echo "<h3>üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è:</h3>";
            $lastMessages = $db->query("SELECT message_type, message_content, ai_response, created_at FROM conversation_messages ORDER BY created_at DESC LIMIT 10")->fetchAll(PDO::FETCH_ASSOC);
            echo "<table border='1'><tr><th>–¢–∏–ø</th><th>–°–æ–æ–±—â–µ–Ω–∏–µ</th><th>–û—Ç–≤–µ—Ç AI</th><th>–í—Ä–µ–º—è</th></tr>";
            foreach ($lastMessages as $msg) {
                $content = htmlspecialchars(substr($msg['message_content'], 0, 100) . (strlen($msg['message_content']) > 100 ? '...' : ''));
                $aiResponse = htmlspecialchars(substr($msg['ai_response'], 0, 100) . (strlen($msg['ai_response']) > 100 ? '...' : ''));
                echo "<tr><td>{$msg['message_type']}</td><td>$content</td><td>$aiResponse</td><td>{$msg['created_at']}</td></tr>";
            }
            echo "</table>";
        }
    }
    
    echo "<p>‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!</p>";
    
} catch (Exception $e) {
    echo "<p>‚ùå –û—à–∏–±–∫–∞: " . htmlspecialchars($e->getMessage()) . "</p>";
}
?>
